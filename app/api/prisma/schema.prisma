// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int       @id
  user_id            Int       @unique @default(autoincrement())
  tg_id              Int       @unique @default(autoincrement())
  email              String    @unique
  login              String    @unique
  first_name         String?
  last_name          String?
  usual_full_name    String?
  usual_first_name   String?
  url                String?   @default("null")
  phone              String?   @unique @default("hidden")
  displayname        String?
  kind               String?   @default("null")
  staff              Boolean
  correction_point   Int
  pool_month         String?
  pool_year          String?
  location           String?
  wallet             Int
  anonymize_date     DateTime
  data_erasure_date  DateTime
  created_at         DateTime
  updated_at         DateTime
  alumnized_at       DateTime?
  alumni             Boolean?
  active             Boolean?
  Cursus_user        CursusUser[]
  Project_users      ProjectUser[]
  User_skill         UserSkill[]
  achievements       Achievement[]
  titles             String[]
  languages_users    LanguagesUsers[]
}

model Cursus {
  id            Int      @id
  created_at    DateTime
  name          String
  slug          String
  kind          String
  users         CursusUser[]
}

model Skill {
  id            Int      @id
  name          String
  level         Float
  users         CursusUser[] @relation("UserSkill")
  skills        UserSkill[]
}

model CursusUser {
  id            Int      @id
  grade         String?
  level         Float
  blackholed_at DateTime?
  begin_at      DateTime
  end_at        DateTime
  has_coalition Boolean
  created_at    DateTime
  updated_at    DateTime
  user          User     @relation(fields: [user_id], references: [id])
  user_id       Int
  cursus        Cursus   @relation(fields: [cursus_id], references: [id])
  cursus_id     Int
  skills        Skill[]  @relation("UserSkill")
}

model UserSkill {
  id            Int      @id
  user          User     @relation(fields: [user_id], references: [id])
  user_id       Int
  skill         Skill    @relation(fields: [skill_id], references: [id])
  skill_id      Int
}

model ProjectUser {
  id               Int      @id
  user_id          Int
  occurrence       Int
  final_mark       Int
  status           String
  validated        Boolean @map("validated?")
  current_team_id  Int     @map("current_team_id")
  marked           Boolean
  marked_at        DateTime @map("marked_at")
  retriable_at     DateTime @map("retriable_at")
  created_at       DateTime @map("created_at")
  updated_at       DateTime @map("updated_at")
  project_id       Int     @map("project.id")
  name             String  @map("project.name")
  slug             String  @map("project.slug")
  parent_id        Int?    @map("project.parent_id")
  cursus_ids       Int[]
  user             User    @relation(fields: [user_id], references: [id])
}

model LanguagesUsers {
  id          Int     @id @default(autoincrement())
  language_id Int
  user       User     @relation(fields: [user_id], references: [id])
  user_id    Int
  position   Int
  created_at DateTime
}

model Achievement {
  id            Int     @id
  name          String
  description   String
  tier          String
  kind          String
  visible       Boolean
  image         String
  nbr_of_success Int?
  users_url     String?
  users         User[]
}

